datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  referentialIntegrity = "prisma"
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

model Account {
  id String @id @default(uuid()) 
  name String
  type String
  transactions Transaction[]
  id_user String
  user  User @relation(fields: [id_user], references: [id])
  @@map("account")
}

model Category {
  id String @id @default(uuid()) 
  name String
  subCategories SubCategory[]
  id_user String
  user  User @relation(fields: [id_user], references: [id])
  @@map("category")
}

model SubCategory {
  id String @id @default(uuid()) 
  name String
  id_category String
  category   Category @relation(fields: [id_category], references: [id], onDelete: Cascade)
  transactions Transaction[] 
  @@map("subcategory")
}

model Transaction {
  id String @id @default(uuid())
  description String
  date DateTime
  value Decimal
  id_subCategory String
  subCategory   SubCategory @relation(fields: [id_subCategory], references: [id])
  id_account String
  account   Account @relation(fields: [id_account], references: [id])
  id_user String
  user  User @relation(fields: [id_user], references: [id])
  id_tag String
  tag  Tag @relation(fields: [id_tag], references: [id])
  @@map("transation")
}

model User {
  id String @id @default(uuid())
  name String
  email String
  password String
  categories Category[]
  accounts Account[]
  transactions Transaction[]
  @@map("user")
}

model Tag {
  id String @id @default(uuid())
  name String
  transactions Transaction[]
  @@map("tag")
}
